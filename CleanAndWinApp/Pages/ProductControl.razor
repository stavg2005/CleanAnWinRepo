@page "/pcontrol"
@inject UserService Userservice
@inject Data.BrowserService Service
@inject Data.BrowserDimension d;
@using Model;
@using Services
<EditForm Model="@productModel" OnValidSubmit="@UpdateProduct">
    <DataAnnotationsValidator />
    <p>Hello @Userservice.CurrentUser.UserName</p>
    <div style="width:@(d.Width)px">
        @{
            if (allProduct != null)
            {
                <table class="table align-middle mb-0 bg-white" style="overflow-x:hidden">
                    <thead class="bg-light">
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Product P in allProduct)
                        {
                            productModel = new ProductModel
                        {
                            ProductID = P.ProductID,
                            Name = P.ProductName,
                            Des = P.ProductDescription,
                            Price = P.ProductPrice.ToString(),
                            ProductPicture = P.ProductPicture
                        };

                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <img src="@(path + Convert.ToBase64String(P.ProductPicture))"
                                             alt=""
                                             style="width: 45px; height: 45px"
                                             class="rounded-circle" />
                                        <div class="ms-3">
                                            @if (conditionIsMet)
                                            {
                                                <InputText class="fw-bold mb-1" @bind-Value="productModel.Name" style="width:150px" />
                                            }
                                            else
                                            {
                                                <p class="fw-bold mb-1">@P.ProductName</p>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @if (conditionIsMet)
                                    {
                                        <InputText class="fw-bold mb-1" @bind-Value="productModel.Des" style="width:150px" />
                                    }
                                    else
                                    {
                                        @P.ProductDescription
                                    }
                                </td>
                                <td>
                                    @if (conditionIsMet)
                                    {
                                        <InputText class="fw-bold mb-1" @bind-Value="productModel.Price" style="width:150px" />
                                    }
                                    else
                                    {
                                        @P.ProductPrice
                                    }
                                </td>
                                <td>
                                    @if (conditionIsMet)
                                    {
                                        <button type="submit" class="btn btn-link btn-sm btn-rounded">
                                            Confirm
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-link btn-sm btn-rounded" @onclick="() => ToggleCondition()">
                                            Edit
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    </div>
</EditForm>

@code {
    List<Product> allProduct { get; set; }
    ApiServices a = new ApiServices();
    string path = "data:image/png;base64,";
    bool conditionIsMet = false;
    ProductModel productModel = new ProductModel();

    protected override async Task OnInitializedAsync()
    {
        allProduct = await a.GetALLProducts();
    }

    private void ToggleCondition()
    {
        conditionIsMet = !conditionIsMet;
        if (!conditionIsMet)
        {
            // Optionally handle any logic when exiting edit mode
        }
    }

    private async Task UpdateProduct()
    {
        try
        {
            conditionIsMet = false;
            await a.UpdateProduct(new Product(productModel.ProductID, productModel.Name, productModel.Des, int.Parse(productModel.Price), productModel.ProductPicture));
            allProduct = await a.GetALLProducts();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            // Handle exceptions
        }
    }

    public class ProductModel
    {
        public int ProductID { get; set; }
        public string Name { get; set; }
        public string Des { get; set; }
        public string Price { get; set; }
        public byte[] ProductPicture { get; set; }
    }
}
