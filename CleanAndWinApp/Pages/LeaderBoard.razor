<h3>LeaderBoard</h3>
@page "/leaders"
@inject LeaderBoardService leaderboard;
@inject Data.BrowserService Service
@inject Data.BrowserDimension d;
@inject AuthService AuthService
@inject NavigationManager nav;
@inject UserService Userservice
<head>
    <link rel="stylesheet" href="/css/leaderboard.css" />
    <link rel="stylesheet" href="css/Proggress.css">
    <link rel="stylesheet" href="css/Store.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons CSS (if you're using Bootstrap Icons) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</head>

<div class="leaderboard-container" style="height:100vh;width:100vw;overflow:scroll;filter: blur(@(blur)px)">
    @if(!TopAllDay)
    {
        <button class="toggle-button" @onclick="ShowTopAllDay">
            Top All Day
        </button>
    }
    @if (!TopAllWeek)
    {
        <button class="toggle-button" @onclick="ShowTopAllWeek">
            Top all Week
        </button>
    }
    @if (!TopAllTime)
    {
        <button class="toggle-button" @onclick="ShowTopAllTime">
            Top all Time
        </button>
    }


    @if(leaderboard.TopUsers != null && leaderboard.TopUsersThisWeek!=null&&leaderboard.TopUsers!=null)
    {
        <div class="leaderboard-section" style="min-width:(@d.Width)px;min-height:(@d.Height)px">

            @if (!TopAllDay)
            {

            }
            else
            {
                <h2>Top Users Today</h2>
                <table class="leaderboard-table">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Name</th>
                            <th>Kg Cleaned</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (LeaderboardUser user in leaderboard.TopUsersToday)
                        {
                            <tr>
                                <td>@(leaderboard.TopUsersToday.IndexOf(user) + 1)</td>
                                <td>@user.Name</td>
                                <td>@user.KgCleaned</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="leaderboard-section" style="min-width:(@d.Width)px;min-height:(@d.Height)px">

            @if (!TopAllTime)
            {

            }
            else
            {
                <h2>Top Users All Time</h2>
                <table class="leaderboard-table">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Name</th>
                            <th>Kg Cleaned</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (LeaderboardUser user in leaderboard.TopUsers)
                        {
                            <tr>
                                <td>@(leaderboard.TopUsers.IndexOf(user) + 1)</td>
                                <td>@user.Name</td>
                                <td>@user.KgCleaned</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div class="leaderboard-section" style="min-width:(@d.Width)px;min-height:(@d.Height)px">

            @if (!TopAllWeek)
            {

            }
            else
            {
                <h2>Top Users This Week</h2>
                <table class="leaderboard-table">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Name</th>
                            <th>Kg Cleaned</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (LeaderboardUser user in leaderboard.TopUsersThisWeek)
                        {
                            <tr>
                                <td>@(leaderboard.TopUsersThisWeek.IndexOf(user) + 1)</td>
                                <td>@user.Name</td>
                                <td>@user.KgCleaned</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            
        </div>
    }
    
</div>
<div class="navbar" style="margin-top:-100px;z-index:1;position:fixed">

    <div class="navbar">
        <img @onclick="Gomap" src="css/imags/bin.png" style="width:50px;height:50px" />
        <img @onclick="GoMain" src="css/imags/home.png" style="width:50px;height:50px" />
        <img @onclick="ToggleSidebar" src="css/imags/user.png" style="width:50px;height:50px" />
    </div>

</div>

@if (_sidebarVisible)
{
    <div class="sidebar " style="top:0px;position:fixed;right:-20px;height:@(d.Height)px;z-index:2">
        <ul>


            <li class="nav-item" style="font-size:50px;list-style-type:none" @onclick="ToggleSidebar">
                <a class="nav-link">
                    <i class="bi bi-justify"> </i>
                </a>
            </li>


            <li class="nav-item" style="font-size:20px" @onclick="GoSettings">
                <a class="nav-link">
                    <i class="bi bi-person-circle"></i> User Settings
                </a>
            </li>
            <li class="nav-item" style="font-size:20px" @onclick="GoOrders">
                <a class="nav-link">
                    <i class="bi bi-cart"></i> orders
                </a>
            </li>
            <li class="nav-item" style="font-size:20px" @onclick="GoReports">
                <a class="nav-link">
                    <i class="bi bi-pass"></i> Reports
                </a>
            </li>

            <li class="nav-item" style="font-size:20px;" @onclick="Logout">
                <a class="nav-link" style="margin-top:550px">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </a>
            </li>

        </ul>
    </div>
}

@code {
    bool TopAllTime = true;
    bool TopAllWeek = false;
    bool TopAllDay = false;
    static int count = 0;
    private int blur = 0;
    private bool _sidebarVisible = false;
    ApiServices a = new ApiServices();

    private void ToggleSidebar()
    {
        count++;
        _sidebarVisible = !_sidebarVisible;
        if (count % 2 == 0 || count == 0)
        {
            blur = -1;
        }
        else
        {
            blur = 5;
        }

    }
    private void GoStroe()
    {
        nav.NavigateTo("/store");
    }
    private void Report()
    {
        nav.NavigateTo("/report");
    }
    private void GoMain()
    {
        nav.NavigateTo("/main");
    }
    private void Gomap()
    {

        nav.NavigateTo($"maps/{Userservice.CurrentUser.location.lat}/{Userservice.CurrentUser.location.lng}");
    }

    private void Logout()
    {
        // Perform logout logic
        // Clear authentication token
        AuthService.ClearAuthToken();
    }

    private void GoLeader()
    {
        nav.NavigateTo("/leaders");
    }
    private void GoSettings()
    {
        nav.NavigateTo("/setting");
    }

    private void GoOrders()
    {
        nav.NavigateTo("/testing");
    }
    private void GoReports()
    {
        nav.NavigateTo("reports");
    }
    private void ShowTopAllTime()
    {
        TopAllTime = true;
        TopAllWeek = false;
        TopAllDay = false ;
        StateHasChanged();
    }

    private void ShowTopAllDay()
    {
        TopAllTime = false;
        TopAllWeek = false;
        TopAllDay = true;
        StateHasChanged();
    }

    private void ShowTopAllWeek()
    {
        TopAllTime = false;
        TopAllWeek = true;
        TopAllDay = false;
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        if (AuthService.IsUserAuthenticated)
        {

            await GetDimensions();
            leaderboard.TopUsers = await a.GetTopUsers();
            leaderboard.TopUsersThisWeek = await a.GetTopUsersThisWeek();
            leaderboard.TopUsersToday = await a.GetTopUsersToday();
        }
        else
        {
            nav.NavigateTo("Login");
        }


    }
    async Task GetDimensions()
    {
        var dimension = await Service.GetDimensions();
        d.Height = dimension.Height;
        d.Width = dimension.Width;
    }
}
