@page "/login"
@inject NavigationManager NavManager;
@using ProjectYodBetButAPICleanAndWin.Data;
@using Microsoft.JSInterop;
@using System.Threading.Tasks;
@inject IJSRuntime JsRuntime;
@inject ProjectYodBetButAPICleanAndWin.Data.BrowserService Service
@inject ProjectYodBetButAPICleanAndWin.Data.BrowserDimension d;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession
@using Model;
@using MySql.Data.MySqlClient;
@using DataLayer;
<body style=" overflow-y: hidden;overflow-x: hidden;overflow: hidden;">
	@{

		if (d.Width > 2500)
		{
			<video style="position:absolute;overflow-y: hidden;overflow-x: hidden;overflow: hidden;width:105%" autoplay loop muted>
				<source src="css/images/backvid2k.mp4" type="video/mp4">
			</video>
			// <img style="position:absolute;height:1291px;width:2519px;" src="css/images/Login_BackGround_2k.jpg">
		}
		if (d.Width > 1000 && d.Width < 2500)
		{
			<video style="position:absolute;overflow-y: hidden;overflow-x: hidden;overflow: hidden;width:105%;" id="background-video" autoplay loop muted>
				<source src="css/images/backvid1080p.mp4" type="video/mp4">
			</video>
		}
	}


	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

	<link rel="stylesheet" href="css/style.css">





	<div style="position:absolute;position:center;top:30%;left:40%">
		<div class="row justify-content-center">

			<div class="login-wrap py-5">
				<div style="opacity:5">
					<h3 class="text-center mb-0" style="opacity:5">Welcome</h3>
					<p style="color:white" class="text-center">Sign in by entering the information below</p>
					<p style="color:red">@error</p>
					<form style="opacity:1">
						<div style="opacity:1" class="form-group">
							<div class="icon d-flex align-items-center justify-content-center"><span class="fa fa-user"></span></div>
							<input type="text" style="color:blue" class="form-control" placeholder="@Width" @bind-value="email">
						</div>
						<div style="opacity:1" class="form-group">
							<div style="opacity:1" class="icon d-flex align-items-center justify-content-center"><span class="fa fa-lock"></span></div>
							<input style="opacity:1" type="password" class="form-control" placeholder="@Height" @bind-value="password">
						</div>

						<div style="opacity:1" class="form-group d-md-flex">
							<div style="opacity:1" class="w-100 text-md-right">
								<a style="opacity:1" href="#">Forgot Password</a>
							</div>
						</div>
						<span style="opacity:1">
							<button type="button" class="btn form-control btn-primary rounded  px-3" @onclick="() => LoginAPI()">Get Started</button>
						</span>
					</form>
					<div style="opacity:1" class="w-100 text-center mt-4 text">
						<p style="opacity:1" class="mb-0">Don't have an account?</p>
						<a style="opacity:1" href="register">Sign Up</a>
					</div>
				</div>

			</div>


		</div>
	</div>
</body>
@code
{

	public int Height { get; set; }
	public int Width { get; set; }

	public string email="";
	public string password="";

	string error="";
	ApiServices a = new ApiServices();

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await GetDimensions();
			StateHasChanged();
		}

	}

	async Task GetDimensions()
	{
		var dimension = await Service.GetDimensions();
		d.Height = dimension.Height;
		d.Width = dimension.Width;
	}

	private async Task LoginAPI()
	{
		Users c = await a.Login(email, password);
		if (c != null)
		{
			await MySession.SetAsync("name", email);
			NavManager.NavigateTo("/main");
		}
	}
	}